
type Skill {
  # This is only a comment
  id: ID
  parent: Skill
  name: String!
  now: String! @deprecated(reason: "This is just an example of a virtual field.")
}

enum EyeColor {
  BLUE
  GREEN
  BROWN
  BLACK
}

input InputPerson {
  id: ID
  age: Int
  eyeColor: EyeColor
  favSkill: ID
}

input InputPersonCreate {
  name: String!
  surname: String
  email: String
  age: Int
  eyeColor: EyeColor
  friends: [ID!]
  skills: [ID!]
  favSkill: ID
}

input InputSkill {
  id: ID
  name: String
}

input InputSkillCreate {
  name: String!
  parent: ID
}

type Person {
  id: ID
  name: String!
  surname: String
  fullName: String
  email: String
  age: Int
  eyeColor: EyeColor
  friends (input: InputPerson): [Person!]
  skills (input: InputSkill): [Skill!]
  favSkill: Skill
}

type Query {
  randomSkill: Skill!
  randomPerson: Person!
  skill (input: InputSkill): Skill
  person (input: InputPerson): Person
  skills (input: InputSkill): [Skill!]
  persons (input: InputPerson): [Person!]
}

type Mutation {
  createSkill (input: InputSkillCreate): Skill!
  createPerson (input: InputPersonCreate): Person!
}